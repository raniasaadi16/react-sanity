{"version":3,"sources":["style/carouselResponsive.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","components/TeamCard.jsx","components/Team.jsx"],"names":["responsiveTeam","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","tabletLg","mobile","responsiveTestimonials","responsiveGallery","default","Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","CardActionArea","children","focusVisibleClassName","ButtonBase","focusVisible","focusHighlight","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","MEDIA_COMPONENTS","CardMedia","_props$component","component","Component","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","concat","media","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","CardContent","padding","paddingBottom","TeamCard","team","useStyle","card","asset","url","Box","motion","div","cardHover","variants","initial","whileHover","whileTap","cardHoverText","Typography","variant","textWhite","bio","Team","useInView","inView","animation","useAnimation","useEffect","start","mt","id","animate","py","pl","flexGrow","TeamVar","Grid","container","alignItems","item","lg","sm","xs","md","Title","responsive","map","person","_id"],"mappings":"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","file":"static/js/11.ec24e096.chunk.js","sourcesContent":["export const responsiveTeam = {\r\n    superLargeDesktop: {\r\n      breakpoint: { max: 4000, min: 2000 },\r\n      items: 5\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 2000, min: 1190 },\r\n      items: 3\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1190, min: 600 },\r\n      items: 2\r\n    },\r\n    tabletLg: {\r\n        breakpoint: { max: 959, min: 790 },\r\n        items: 3\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 600, min: 0 },\r\n      items: 1\r\n    }\r\n};\r\n\r\nexport const responsiveTestimonials = {\r\n  superLargeDesktop: {\r\n    // the naming can be any, depends on you.\r\n    breakpoint: { max: 4000, min: 3000 },\r\n    items: 1\r\n  },\r\n  desktop: {\r\n    breakpoint: { max: 3000, min: 1024 },\r\n    items: 1\r\n  },\r\n  tablet: {\r\n    breakpoint: { max: 1024, min: 464 },\r\n    items: 1\r\n  },\r\n  mobile: {\r\n    breakpoint: { max: 464, min: 0 },\r\n    items: 1\r\n  }\r\n};\r\n\r\nexport const responsiveGallery = {\r\n  default: 3,\r\n  600: 1,\r\n  960: 2\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import React from 'react';\r\nimport { Typography, Card, CardActionArea, CardMedia, CardContent, Box } from '@material-ui/core';\r\nimport { useStyle } from '../style/style';\r\nimport { motion } from 'framer-motion';\r\nimport { cardHover, cardHoverText } from '../style/animations'\r\n\r\nexport default function TeamCard({team}) {\r\n    const classes = useStyle();\r\n    \r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardActionArea>\r\n                <CardMedia className={classes.media} image={team.image.asset.url}/>\r\n                <Box component={motion.div} position='absolute' top='0' className={classes.cardHover}\r\n                variants={cardHover} initial='hidden' whileHover='visible' whileTap='visible'>\r\n                    <CardContent className={classes.cardHoverText} component={motion.div}\r\n                    variants={cardHoverText}>\r\n                        <Typography variant=\"body1\" className={classes.textWhite}>\r\n                            {team.name}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" className={classes.textWhite} component=\"p\">\r\n                            {team.bio}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Box>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n","import { useEffect } from 'react';\r\nimport { Typography, Box, Grid } from '@material-ui/core';\r\nimport { useStyle } from '../style/style';\r\nimport TeamCard from './TeamCard';\r\nimport Carousel from 'react-multi-carousel';\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { responsiveTeam } from '../style/carouselResponsive';\r\nimport { useInView } from 'react-intersection-observer'; \r\nimport { motion, useAnimation } from 'framer-motion';\r\nimport { cardHover, TeamVar, Title } from '../style/animations';\r\n\r\nexport default function Team({team}) {\r\n    const classes = useStyle();\r\n    const { ref, inView } = useInView();\r\n    const animation = useAnimation();\r\n\r\n    useEffect(() => {\r\n        if(inView){\r\n            animation.start('visible')\r\n        }\r\n        if(!inView){\r\n            animation.start('hidden')\r\n        }\r\n    }, [inView])\r\n        \r\n    return (\r\n        <Box mt={7} className={classes.overflow} id='team'\r\n        ref={ref}\r\n        component={motion.div}\r\n        variants={cardHover}\r\n        animate={animation}\r\n        >\r\n            <Box py={8} pl={5} className={classes.team} style={{flexGrow: 1}}\r\n            component={motion.div}\r\n            variants={TeamVar}\r\n            animate={animation}>\r\n                <Grid container alignItems='center'>\r\n                    <Grid item lg={4} sm={12} xs={12} md={4}>\r\n                        <Box width='50%'\r\n                        component={motion.div}\r\n                        variants={Title}\r\n                        animate={animation}>\r\n                            <Typography variant='h3' className={classes.textWhite}>\r\n                                Our Team\r\n                            </Typography>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item lg={8} sm={12} xs={12} md={8}>\r\n                        <Carousel responsive={responsiveTeam}>\r\n                            {team.map(person => <TeamCard key={person._id} team={person}/>)}\r\n                        </Carousel>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n"],"sourceRoot":""}